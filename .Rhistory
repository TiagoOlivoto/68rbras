marker = "point",
parallel = TRUE,
lower_noise = 0.15,
reference = TRUE,
tolerance = 1.3,
extension = 1,
reference_area = 2 * 1.5,
reference_larger = TRUE,
workers = 6
)
export(res2$results, "graos.csv")
View(res2)
View(res2[["results"]])
hist(res2$results$area)
df <- import("graos.csv")
View(df)
# Split the string at the first underscore
result <- unlist(strsplit(df$img, "_", fixed = TRUE))[1]
print(result)
strsplit(df$img, split = "_")
strsplit(df$img, split = "_")[[1]]
a <- strsplit(df$img, split = "_")
View(a)
unlist(a)
unlist(a)[[1]]
unlist(strsplit(df$img, split = "_")[[1]])
df <- import("graos.csv") |>
mutate(PLOT = strsplit(img, split = "_"))
View(df)
df <- import("graos.csv") |>
mutate(PLOT = strsplit(img, split = "_")[[1]])
View(df)
df <- import("graos.csv") |>
mutate(PLOT = unlist(strsplit(img, split = "_"))[[1]])
View(df)
View(df)
unlist(strsplit(df$img, split = "_"))
View(df)
df <- import("graos.csv") |>
mutate(PLOT = unlist(strsplit(df$img, split = "_", fixed = TRUE))[[1]])
View(df)
unlist(strsplit(df$img, split = "_", fixed = TRUE))
df <- import("graos.csv") |>
mutate(PLOT = unlist(strsplit(df$img, split = "_", fixed = TRUE)[[1]])[[1]])
View(df)
View(df)
df <- import("graos.csv") |>
mutate(PLOT = substr(img, 1, strloc(img, "_") - 1))
strloc
library(stringr)
str_locate(df$img, "*._")
str_locate(df$img, "*.\_")
str_locate(df$img, "*.\\_")
str_locate(df$img, "*\\_")
str_locate(df$img, "_")
str_locate(df$img, "*_")
str_locate(df$img, "^([^_]*)")
df <- import("graos.csv") |>
mutate(PLOT = str_extract(img, ^([^_]*)))
df <- import("graos.csv") |>
mutate(PLOT = str_extract(img, "^([^_]*")))
df <- import("graos.csv") |>
mutate(PLOT = str_extract(img, "^([^_]*"))
df <- import("graos.csv") |>
mutate(PLOT = str_extract(img, "^([^_]*)"))
View(df)
df <-
import("graos.csv") |>
mutate(PLOT = str_extract(img, "^[(\_*)]"))
df <-
import("graos.csv") |>
mutate(PLOT = str_extract(img, "^([\_*])"))
df <-
import("graos.csv") |>
mutate(PLOT = str_extract(img, "^([\_]*)"))
df <-
import("graos.csv") |>
mutate(PLOT = str_extract(img, "^([^_]*)"))
View(df)
df <- import("graos.csv")
View(df)
img <- image_import("129_Grãos - contagem_1_2024-02-28-05-05-17.jpg")
plot(img)
ocont <- object_contour(img,     # img = img,
index = "GRAY",
tolerance = 1.3,
extension = 1)
View(ocont)
img <- image_import("129_Grãos - contagem_1_2024-02-28-05-05-17.jpg", resize = 50)
ocont <- object_contour(img,     # img = img,
index = "GRAY",
tolerance = 1.3,
extension = 1)
View(ocont)
plot_polygon(ocont[["14"]])
img <- image_import("129_Grãos - contagem_1_2024-02-28-05-05-17.jpg")
ocont <- object_contour(img,     # img = img,
index = "GRAY",
tolerance = 1.3,
extension = 1)
plot_polygon(ocont[["14"]])
poly_centdist(ocont)
bench::mark(poly_centdist(ocont))
View(ocont)
View(df)
View(df)
set_wd_here("capsulas")
dfcap <- import("capsulas.xlsx")
View(dfcap)
rbind(df, dfcap)
# juntar
dfbind <- bind_rows(df, dfcap)
View(dfbind)
# juntar
dfbind <-
bind_rows(df, dfcap) |>
select(img, area, length, width)
View(dfbind)
set_wd_here()
set_wd_here()
df <- import("graos.csv")
dfcap <- import("capsulas.xlsx")
View(df)
ggplot(df, aes(x = length)) +
geom_histogram()
ggplot(df, aes(x = length)) +
geom_histogram(bins = 200)
View(df)
dff <- filter(df, length > 0.1)
dff <- filter(df, length > 1)
View(dff)
img <- image_import("outlier.jpg")
res <-
analyze_objects_minimal(
img = img,
# pattern = "contagem",
index = "GRAY"
)
res <-
analyze_objects_minimal(
img = img,
# pattern = "contagem",
index = "GRAY",
tolerance = 1.3,
extension = 1,
reference = TRUE,
reference_area = 2 * 1.5,
reference_larger = TRUE,
)
max(res$results$length)
max(res$results$area)
hist(res$results$area)
res <-
analyze_objects_minimal(
img = img,
# pattern = "contagem",
index = "GRAY",
tolerance = 1.3,
extension = 1,
reference = TRUE,
reference_area = 2 * 1.5,
reference_larger = TRUE,
upper_size = 0.15
)
View(dff)
df <-
import("graos.csv") |>
filter(length < 1)
ggplot(df, aes(x = length())) +
geom_histogram(bins = 200)
ggplot(df, aes(x = length)) +
geom_histogram(bins = 200)
df <-
import("graos.csv") |>
filter(length < 0.7)
ggplot(df, aes(x = length)) +
geom_histogram(bins = 200)
df <-
import("graos.csv") |>
filter(length < 0.6)
df <-
import("graos.csv")
200 / 207000
200 / 207000 * 100
df <-
import("graos.csv") |>
filter(length < 0.6)
ggplot(df, aes(x = length)) +
geom_histogram(bins = 200)
ggplot(df, aes(x = length, y = area)) +
geom_point(alpha = 0.5)
## Cápsulas
dfcap <- import("capsulas.xlsx")
ggplot(dfcap, aes(x = area)) +
geom_histogram()
## Cápsulas
dfcap <-
import("capsulas.xlsx") |>
filter(area < 0.6)
ggplot(dfcap, aes(x = area)) +
geom_histogram()
View(dfcap)
# juntar
dfbind <-
bind_rows(df, dfcap) |>
select(img, area, length, width)
View(dfbind)
df <-
import("graos.csv") |>
filter(length < 0.6) |>
mute(tipo = "Grão")
df <-
import("graos.csv") |>
filter(length < 0.6) |>
mutate(tipo = "Grão")
## Cápsulas
dfcap <-
import("capsulas.xlsx") |>
filter(area < 0.6) |>
mutate(tipo = "Cápsula")
# juntar
dfbind <-
bind_rows(df, dfcap) |>
select(img, area, length, width)
View(dfbind)
# juntar
dfbind <-
bind_rows(df, dfcap) |>
select(tipo, img, area, length, width)
View(dfbind)
View(dfbind)
# Resumo dos dados
dfresum <-
dfbind |>
summarise(
n = n()
)
View(dfresum)
# Resumo dos dados
dfresum <-
dfbind |>
group_by(img) |>
summarise(
n = n()
)
View(dfresum)
# Resumo dos dados
dfresum <-
dfbind |>
group_by(tipo, img) |>
summarise(
n = n()
)
View(dfresum)
# Resumo dos dados
dfresum <-
dfbind |>
group_by(tipo, img) |>
summarise(
n = n(),
across(area:width, mean)
)
View(dfresum)
# Resumo dos dados
dfresum <-
dfbind |>
group_by(tipo, img) |>
summarise(
n = n(),
across(area:width, .fns = list(min = min, mean = mean, max = max))
)
View(dfresum)
View(dfbind)
View(dfresum)
# Resumo dos dados
dfresum <-
dfbind |>
group_by(tipo, img) |>
summarise(
n = n(),
across(area:width, .fns = list(min = min, mean = mean, max = max))
) |>
ungroup()
# dados (largo)
dflargo <-
dfresum |>
pivot_wider(names_from = tipo, values_from = area_min:width_max)
View(dflargo)
View(dfbind)
dfbind |>
filter(tipo == "Cápsulas")
dfbind |>
filter(tipo == "Cápsula")
# Resumo dos dados (cápsulas)
dfresum_cap <-
dfbind |>
filter(tipo == "Cápsula") |>
select(-tipo) |>
group_by(img) |>
summarise(
n = n(),
across(area:width, .fns = list(min = min, mean = mean, max = max))
) |>
ungroup()
View(dfresum_cap)
# Resumo dos dados (cápsulas)
dfresum_cap <-
dfbind |>
filter(tipo == "Cápsula") |>
select(-tipo) |>
group_by(img) |>
summarise(
NC = n(),
AC = mean(area)
) |>
ungroup()
View(dfresum_cap)
# Resumo dos dados (cápsulas)
dfresum_cap <-
dfbind |>
filter(tipo == "Cápsula") |>
select(-tipo) |>
group_by(img) |>
summarise(
NC = n(),
AC = mean(area)
) |>
ungroup() |>
separate(img, into = "TIPO", sep = "_")
View(dfresum_cap)
View(dfbind)
# Resumo dos dados (cápsulas)
dfresum_cap <-
dfbind |>
filter(tipo == "Cápsula") |>
select(-tipo) |>
group_by(img) |>
summarise(
NC = n(),
AC = mean(area)
) |>
ungroup() |>
separate(img, into = "TIPO", sep = "_")
# Resumo dos dados (cápsulas)
dfresum_cap <-
dfbind |>
filter(tipo == "Cápsula") |>
select(-tipo) |>
group_by(img) |>
summarise(
NC = n(),
AC = mean(area)
) |>
ungroup() |>
separate(img, into = "INDIVIDUO", sep = "_")
View(dfresum_cap)
dfbind |>
filter(tipo == "Grão")
# Resumo dos dados (grãos)
dfresum_grao <-
dfbind |>
filter(tipo == "Grão") |>
select(-tipo) |>
group_by(img) |>
summarise(
NG = n(),
CP = mean(length),
LG = mean(width),
) |>
ungroup() |>
separate(img, into = "INDIVIDUO", sep = "_")
View(dfresum_grao)
View(dfresum_cap)
View(dfresum_grao)
View(dfresum_cap)
View(dfresum_grao)
cbind(dfresum_cap, dfresum_grao)
# juntar cápsulas e grãos
dfjunto <-
left_join(dfresum_grao, dfresum_cap)
?left_join
# juntar cápsulas e grãos
dfjunto <-
right_join(dfresum_grao, dfresum_cap)
anti_join(dfresum_grao, dfresum_cap)
View(dfresum_cap)
View(dfresum_grao)
# juntar cápsulas e grãos
dfjunto <-
full_join(dfresum_grao, dfresum_cap)
View(dfjunto)
dfjunto |> filter(is.na(CP))
dfcampo <- import("dados_lab_final.xlsx")
dfcampo <-
import("dados_lab_final.xlsx") |>
full_join(dfjunto)
dfcampo <-
import("dados_lab_final.xlsx")
View(dfcampo)
View(dfjunto)
dfcampo <-
import("dados_lab_final.xlsx") |>
as_character(INDIVIDUO) |>
full_join(dfjunto)
View(dfjunto)
# Resumo dos dados (cápsulas)
dfresum_cap <-
dfbind |>
filter(tipo == "Cápsula") |>
select(-tipo) |>
group_by(img) |>
summarise(
NC = n(),
AREAC = mean(area)
) |>
ungroup() |>
separate(img, into = "INDIVIDUO", sep = "_")
# Resumo dos dados (grãos)
dfresum_grao <-
dfbind |>
filter(tipo == "Grão") |>
select(-tipo) |>
group_by(img) |>
summarise(
NG = n(),
CP = mean(length),
LG = mean(width),
) |>
ungroup() |>
separate(img, into = "INDIVIDUO", sep = "_")
# juntar cápsulas e grãos
dfjunto <-
full_join(dfresum_grao, dfresum_cap)
dfcampo <-
import("dados_lab_final.xlsx") |>
as_character(INDIVIDUO) |>
full_join(dfjunto)
View(dfcampo)
export(dfcampo, "df_pheno.xlsx")
df <- import("massa_mmg.xlsx") |> as_character(PLOT)
View(df)
#     show_contour = FALSE,
#     save_image = TRUE,
#     dir_original = "mmg",
#     dir_processed = "proc",
#     marker = "point",
#     parallel = TRUE,
#     lower_noise = 0.5,
#     workers = 6
#   )
# saveRDS(res2, "mod_mmg.RData")
df_mmg <- readRDS("mmg/mod_mmg.RData")
View(df_mmg)
View(df_mmg[["count"]])
View(df)
View(df)
View(df_mmg)
View(df_mmg[["count"]])
View(df_mmg)
View(df_mmg[["count"]])
df_mmg$count |>
separate(Image, into = "TIPO", sep = "_")
mmg <-
df_mmg$count |>
separate(Image, into = "TIPO", sep = "_")
View(mmg)
mmg <-
df_mmg$count |>
separate(Image, into = "PLOT", sep = "_")
View(mmg)
mmg <-
df_mmg$count |>
separate(Image, into = "PLOT", sep = "_") |>
right_join(df)
mmg <-
df_mmg$count |>
separate(Image, into = "PLOT", sep = "_")
full_join(mmg, df)
mmg <-
df_mmg$count |>
separate(Image, into = "PLOT", sep = "_") |>
full_join(df)
View(mmg)
mmg <-
df_mmg$count |>
separate(Image, into = "PLOT", sep = "_") |>
full_join(df) |>
mutate(mmg = massa_mmg / Objects * 1000)
View(mmg)
df_pheno <- import("df_pheno.xlsx")
df_pheno <- import("df_pheno.xlsx") |>
full_join(mmg)
df_pheno <- import("df_pheno.xlsx") |>
as_character(PLOT) |>
full_join(mmg)
import("df_pheno.xlsx") |>
as_character(PLOT)
View(df_pheno)
mmg <-
df_mmg$count |>
separate(Image, into = "PLOT", sep = "_") |>
full_join(df) |>
mutate(mmg = massa_mmg / Objects * 1000) |>
select(PLOT, mmg)
df_pheno <-
import("df_pheno.xlsx") |>
as_character(PLOT) |>
full_join(mmg)
View(df_pheno)
View(mmg)
export(dfcampo, "df_pheno.xlsx")
export(df_pheno, "df_pheno.xlsx")
